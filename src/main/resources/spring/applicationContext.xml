<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"

       default-lazy-init="true">

    <context:annotation-config/>

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:jdbcUrl="jdbc:mysql://localhost:3306/eshopdb"
          p:username="julia"
          p:password="julia"
          p:minimumIdle="20"
          p:maximumPoolSize="30"
          p:poolName="springHikariCP"
    />

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" depends-on="hikariConfig"
          c:configuration-ref="hikariConfig"/>

    <bean id="daoFactory" class="com.gmail.kramarenko104.factoryDao.DaoFactory"
          abstract="true" factory-method="getSpecificDao" depends-on="dataSource"/>
    <!--p:userService-ref="userService"-->
    <!--p:productService-ref="productService"-->
    <!--p:cartService-ref="cartService"-->
    <!--p:orderService-ref="orderService"-->
    <!--/>-->

    <!--<bean id="mySqlHikariDataSourceFactory" class="com.gmail.kramarenko104.factoryDao.MySqlHikariDataSourceFactory"/>-->
    <!--<bean id="mySqlHikariDataSourceFactory" class="com.gmail.kramarenko104.factoryDao.MySqlHikariDataSourceFactory" parent="daoFactory"/>-->

    <bean id="conn" name="conn" class="java.sql.Connection" abstract="true"
          factory-method="#{dataSource.openConnection()}" depends-on="dataSource" />


    <bean id="userService" class="com.gmail.kramarenko104.service.UserServiceImpl" depends-on="dataSource" c:conn="#{dataSource.getConnection()}"/>
    <bean id="productService" class="com.gmail.kramarenko104.service.ProductServiceImpl" depends-on="dataSource" c:conn="#{dataSource.getConnection()}"/>
    <bean id="cartService" class="com.gmail.kramarenko104.service.CartServiceImpl" depends-on="dataSource" c:conn="#{dataSource.getConnection()}"/>
    <bean id="orderService" class="com.gmail.kramarenko104.service.OrderServiceImpl" depends-on="dataSource" c:conn="#{dataSource.getConnection()}"/>


    <bean id="user" class="com.gmail.kramarenko104.model.User" scope="session"/>
    <bean id="product" class="com.gmail.kramarenko104.model.Product" scope="prototype"/>
    <bean id="cart" class="com.gmail.kramarenko104.model.Cart"
          c:userId="#{user.id}" p:totalSum="0" p:itemsCount="0" depends-on="user" scope="session">
            <p:products>
            <map>
                <entry key="<null/>" value="0"/>
            </map> />
            </p:products>
    </bean>
    <bean id="order" class="com.gmail.kramarenko104.model.Order" scope="session" p:totalSum="0" p:itemsCount="0">
        <p:products>
            <map>
                <entry key="<null/>" value="0"/>
            </map> />
        </p:products>
     </bean>



</beans>